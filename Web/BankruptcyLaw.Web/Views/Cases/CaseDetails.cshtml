@model BankruptcyLaw.Web.ViewModels.Cases.CaseDetailsViewModel
@{
    ViewData["Title"] = "Case Details";
}

<h1>@this.ViewData["Title"]</h1>

<hr />

<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">DateFiled</th>
            <th scope="col">CaseNumber</th>
            <th scope="col">CaseStatus</th>
            <th scope="col">AttorneyName</th>
            <th scope="col">JudgeName</th>
            <th scope="col">TrusteeName</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@Model.DateFiled.Date.ToString("yyyy-MM-dd")</td>
            <td>@Model.CaseNumber</td>
            <td>@Model.CaseStatus</td>
            <td>@Model.AttorneyName</td>
            <td>@Model.JudgeName</td>
            <td>@Model.TrusteeName</td>
        </tr>
    </tbody>
</table>
<div class="row mt-4 mb-4">
    <div class="btn-group-vertical col-lg-3 align-self-lg-start">
        <button type="button" class="btn btn-secondary">View Court Documents</button>
        <a type="button" href="/ClientDocuments/All?caseId=@Model.CaseId" class="btn btn-secondary">View Client Documents</a>
        <button type="button" class="btn btn-secondary">View Creditors</button>
        <!-- Button trigger modal -->
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModalCenter">
            Add a new Note
        </button>
    </div>
    <div class="col-lg-9" id="NotesBox">
        @foreach (var note in Model.Notes)
        {
            //TODO: implement pagination for notes. After that is done the JavaScript may have to be adjusted too. 
            <textarea style="resize:none" readonly class="form-control" rows="3">@note.Content</textarea>
            <input readonly class="form-control" value="Note left by @note.OriginalPoster on @note.CreatedOn" />
        }

        <!-- Modal -->
        <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalCenterTitle">Add a new Note</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <div class="input-group">
                                <textarea id="newNote" rows="6" class="form-control" aria-label="With textarea"></textarea>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="button" onclick="CreateNote()" class="btn btn-primary" data-dismiss="modal" href="">Add Note</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<form method="post" id="antiForgeryForm"></form>
@section Scripts {
    <script>
        function CreateNote() {
            var newNoteContent = document.getElementById('newNote').value;
            document.getElementById('newNote').value = '';

            var notesBox = document.getElementById('NotesBox')

            var newNote = document.createElement("textarea")
            newNote.setAttribute("class", "form-control")
            newNote.setAttribute("rows", "3")
            newNote.value = newNoteContent

            notesBox.prepend(newNote);

            var antiForgeryToken = $('#antiForgeryForm input[name=__RequestVerificationToken]').val();
            console.log(antiForgeryToken);
            var data = {
                CaseId: "@Model.CaseId",
                Content: newNoteContent,
                CreatorName: '',
            }

            fetch(`/api/Notes`, {

                method: 'POST',
                body: JSON.stringify(data),
                headers: {
                    'X-CSRF-TOKEN': antiForgeryToken,
                    'content-type': 'application/json',
                },
            })

        }</script>>
}
